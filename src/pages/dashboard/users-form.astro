---
import { openDB } from "../../utils/db";

const db = await openDB();

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const email = formData.get("email");
  const role = formData.get("role");
  const userId = formData.get("id");

  const errors: Record<string, string> = {};
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!email || !emailRegex.test(email as string)) {
    errors.email = "Email tidak valid";
  }
  if (!role || !["viewer", "editor", "maintainer"].includes(role as string))
    errors.role = "Role harus dipilih";

  if (Object.keys(errors).length > 0) {
    return new Response(JSON.stringify({ success: false, errors }), {
      status: 400,
      headers: { "Content-Type": "application/json" },
    });
  }

  if (userId) {
    await db.run(`UPDATE users SET email = ?, role = ? WHERE id = ?`, [
      email,
      role,
      userId,
    ]);
  } else {
    await db.run(`INSERT INTO users (email, role) VALUES (?, ?)`, [
      email,
      role,
    ]);
  }

  return new Response(
    JSON.stringify({ success: true, redirect: "/dashboard/users" }),
    {
      status: 200,
      headers: { "Content-Type": "application/json" },
    },
  );
}
---

<dialog class="modal" id="users_create_or_update_modal">
  <div class="modal-box">
    <form
      class="flex flex-col gap-6"
      method="POST"
      action="/dashboard/users-form"
    >
      <h2
        class="card-title"
        x-text="JSON.parse(selectedUser)?.id ? 'Update' : 'Create' + ' User'"
      >
      </h2>
      <input type="hidden" name="id" :value="JSON.parse(selectedUser)?.id" />
      <div class="flex flex-col gap-2">
        <label for="email">Email</label>
        <input
          id="email"
          type="email"
          name="email"
          placeholder="Email"
          class="input input-bordered w-full rounded-none"
          required
          :value="JSON.parse(selectedUser)?.email"
        />
      </div>
      <div class="flex flex-col gap-2">
        <label for="role">Role</label>
        <select
          class="select rounded-none w-full"
          name="role"
          id="role"
          required
          :value="JSON.parse(selectedUser)?.role"
        >
          <option value="" disabled selected>Choose Role</option>
          <option value="viewer">Viewer</option>
          <option value="editor">Editor</option>
          <option value="maintainer">Maintainer</option>
        </select>
      </div>
      <div class="flex gap-4">
        <button
          class="btn btn-neutral btn-outline flex-1 rounded-none"
          type="reset"
          id="cancelAction">Cancel</button
        >
        <button class="btn btn-primary flex-1 rounded-none" type="submit"
          >Save</button
        >
      </div>
    </form>
  </div>
</dialog>
<script is:inline>
  const form = document.querySelector("#users_create_or_update_modal form");
  const cancelButton = document.getElementById("cancelAction");

  cancelButton.addEventListener("click", () => {
    window.formUtils.clearErrors(form);
    document.getElementById("users_create_or_update_modal")?.close();
  });

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    window.formUtils.clearErrors(form);

    const data = new FormData(form);

    try {
      const res = await fetch(form.action, {
        method: "POST",
        body: data,
      });
      const result = await res.json();

      if (!res.ok) {
        if (result.errors) {
          for (const [field, msg] of Object.entries(result.errors)) {
            window.formUtils.showError(form, field, msg);
          }
        } else {
          alert("Terjadi kesalahan");
        }
      } else if (result.success) {
        window.location.href = result.redirect;
      }
    } catch (err) {
      alert("Error jaringan, coba lagi");
    }
  });
</script>

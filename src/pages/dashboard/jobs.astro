---
import Dashboard from "../../layouts/Dashboard.astro";
import { openDB } from "../../utils/db";
import { Icons } from "../../utils/icons";
import JobsCreateOrUpdateModal from "./jobs-form.astro";
import JobsDelete from "./jobs-delete.astro";

const db = await openDB();

const search = Astro.url.searchParams.get("search") || "";
const status = Astro.url.searchParams.get("status") || "all";

const jobs = await db.all(
  `SELECT
     j.*
   FROM jobs j
          LEFT JOIN projects p ON j.project_id = p.id
   WHERE j.name LIKE ?
     AND j.status LIKE ?`,
  [`%${search}%`, status === "all" ? "%" : status],
);
---

<Dashboard pageTitle="Jobs">
  <section
    slot="content"
    class="card bg-white w-full rounded-none py-12 px-12 shadow-sm flex flex-col gap-8"
    x-data="{selectedJobId: null, selectedJob: null}"
  >
    <div
      class="flex justify-between md:items-center gap-4 flex-wrap md:flex-row flex-col"
    >
      <h2 class="text-xl font-semibold">Jobs</h2>
      <div class="flex md:items-center gap-4 md:flex-row flex-col">
        <div
          x-data="{
          search: new URLSearchParams(window.location.search).get('search') || '',
          updateSearch() {
            const params = new URLSearchParams(window.location.search);
            if (this.search) {
              params.set('search', this.search);
            } else {
              params.delete('search');
            }
            window.location.search = params.toString();
          }
  }"
        >
          <label class="input rounded-none md:w-[220px] w-full">
            <svg
              class="h-[1em] opacity-50"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
            >
              <g
                stroke-linejoin="round"
                stroke-linecap="round"
                stroke-width="2.5"
                fill="none"
                stroke="currentColor"
              >
                <circle cx="11" cy="11" r="8"></circle>
                <path d="m21 21-4.3-4.3"></path>
              </g>
            </svg>

            <input
              type="search"
              class="grow"
              placeholder="Search"
              name="search"
              x-model="search"
              @keydown.enter.prevent="updateSearch"
            />
          </label>
        </div>
        <label
          x-data="{
            status: '',
            updateQueryParam() {
              const params = new URLSearchParams(window.location.search);
              if (this.status) {
                params.set('status', this.status);
              } else {
                params.delete('status');
              }
              window.location.search = params.toString();
            }
          }"
          x-init="status = new URLSearchParams(window.location.search).get('status') || 'all'"
        >
          <select
            class="select rounded-none w-full"
            name="status"
            @change="updateQueryParam"
            x-model="status"
          >
            <option value="all">All Status</option>
            <option value="active">Active</option>
            <option value="inactive">Inactive</option>
          </select>
        </label>
        <button
          class="btn btn-primary rounded-none w-[140px]"
          x-on:click.prevent="selectedJobId = null; selectedJob = null; document.getElementById('jobs_create_or_update_modal').showModal();"
          x-cloak
          x-show="$store.role.permissions.jobs.includes('create')"
        >
          Create
        </button>
      </div>
    </div>
    <div class="overflow-x-auto">
      <div>
        <table class="table">
          <thead>
            <tr>
              <th class="text-black">No.</th>
              <th class="text-black">Project</th>
              <th class="text-black">Type</th>
              <th class="text-black">Status</th>
              <th
                class="text-black"
                x-show="$store.role.permissions.jobs.includes('delete') && $store.role.permissions.jobs.includes('edit')"
                x-cloak>Action</th
              >
            </tr>
          </thead>
          <tbody>
            {
              jobs.map((job: any, idx: number) => (
                <tr>
                  <td>{idx + 1}.</td>
                  <td>{job.name}</td>
                  <td class="capitalize">{job.type.replace("_", " ")}</td>
                  <td>
                    {job.status === "active" ? (
                      <div class={`badge badge-soft badge-success capitalize`}>
                        {job.status}
                      </div>
                    ) : (
                      <div class={`badge badge-soft badge-danger capitalize`}>
                        {job.status}
                      </div>
                    )}
                  </td>
                  <td class="flex items-center gap-4">
                    <a
                      href="#"
                      x-cloak
                      x-show="$store.role.permissions.jobs.includes('delete')"
                      data-jobId={job.id}
                      x-on:click.prevent="selectedJobId = $el.dataset.jobid; document.getElementById('jobs_delete').showModal();"
                    >
                      <Icons.trash />
                    </a>
                    <a
                      href="#"
                      x-cloak
                      x-show="$store.role.permissions.jobs.includes('edit')"
                      data-jobId={job.id}
                      data-job={JSON.stringify(job)}
                      x-on:click.prevent="selectedJobId = $el.dataset.jobid; selectedJob = $el.dataset.job; document.getElementById('jobs_create_or_update_modal').showModal();"
                    >
                      <Icons.edit />
                    </a>
                  </td>
                </tr>
              ))
            }
          </tbody>
        </table>
      </div>
    </div>
    <JobsCreateOrUpdateModal />
    <JobsDelete />
  </section>
</Dashboard>
<script is:inline>
  const params = new URLSearchParams(window.location.search);
  if (!params.has("status")) {
    params.set("status", "all");

    window.location.search = params.toString();
  }
</script>
